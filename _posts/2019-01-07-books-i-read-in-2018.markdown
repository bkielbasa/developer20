---
layout: post
title:  Books I read in 2018
mainPhoto: books.jpg
---

’m glad that this year I read so many valuable books. I want to share with you with the most interesting items which you may find interesting too.
## [Getting Things Programmed](https://helion.pl/ksiazki/getting-things-programmed-droga-do-efektywnosci-michal-bartyzel,droppp.htm#format/e)

This book is only available in Polish. I would say that this is Getting Things Done but for developers. I think that the similarity of titles is not an accident. In this book, you can find answers on questions like:

* How estimate time for a specific task?
* How read books?
* How to deal with situations when everyone around disturbs you?
* and much more

The problem is that it’s hard to follow it’s tips. Finishing all the tips can take even a year so IMO it’s easy to just give up or forget about some stuff.
## [Domain Driven Design](https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215)

This is one of the books which are called “must read”. I agree with those opinions but I think it’s not so easy to read because the language of the books doesn’t seem to be easy consuming. I read it in both Polish and English version and it’s awesome. However, the Polish version has some bad translations and it destroys the pleasure of reading. So tip: never read translated technical books.

Backing to the review, Eric Evans explained a lot of things about Domain-Driven Design and this book was my inspiration for the article about services in DDD. Highly recommend.
## [Clean Architecture: A Craftsman’s Guide to Software Structure and Design](https://www.amazon.de/Clean-Architecture-Craftsmans-Software-Structure/dp/0134494164/)

This is one of missing books in my life. Every developer is an architect and should have the knowledge about how to build easily maintainable applications. The program should say what it does by the architecture and this is the topic of the book.

From this book about you’ll learn about Common Reusable Principle, why database or HTTP is only a detail or how to build a monolith application which can be easily split into smaller microservices.
## [Deep Work: Rules for Focused Success in a Distracted World](https://www.amazon.com/Deep-Work-Focused-Success-Distracted/dp/1455586692)

This book cannot be overrated. We leave in so distracted world that it’s seems normal to us to life this way. Cal Newport says that even when you have very distinctive env you can find a way to organize your tasks.

From this book you’ll learn stuff like:

* Why deep work is so important?
* How deep work will make you happier?
* How to achive that?

What I did not like was showing very extremes of people who were almost 99.99% offline and the only way to contact with them was a traditional mailbox checked once a month. On the other hand, this book can learn you how to be more productive with less effort what is cool!
## [Designing Data-Intensive Applications](http://dataintensive.net/)

Before I started reading “Designing Data-Intensive Applications” I heart from at least 3 people that they read or reading it and that it’s awesome. And it is!

A lot of topics are covered by this book I already know more or less. Some information just blew my mind. Very rich references gives even more source of the knowledge. From this book I’ll learn:

* How do transactions work?
* Types of isolation in transactions.
* What a linearizability is?
* and much more

## Summary

I hope you liked the list. If you want, I can tell you more about any of the books below with more detailed review. Let me know in commends below.

What books have you read and you found them interesting? Which of them were the most interesting or important for you? Please take the titles down in the comments section and maybe someone (including me) will read it thanks to you!